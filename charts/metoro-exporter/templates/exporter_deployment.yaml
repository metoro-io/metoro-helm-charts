apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.exporter.metadata.name}}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- toYaml .Values.exporter.metadata.selectorLabels | nindent 4 }}
spec:
  replicas: {{ .Values.exporter.replicas }}
  strategy:
    {{- toYaml .Values.exporter.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- toYaml .Values.exporter.metadata.selectorLabels | nindent 6 }}
  template:
    metadata:
      {{- with .Values.exporter.metadata.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: exporter
        {{- include "metoro.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.exporter.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.exporter.serviceAccount.name }}
      # We want to attempt to put the exporter on different nodes so that if a node goes down, we don't become unavailable
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - exporter
                topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
                  divisor: "1"
            - name: VERSION
              value: {{ .Chart.AppVersion }}
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: METORO_OTLP_URL
              value: {{ .Values.exporter.envVars.mandatory.otlpUrl }}
            - name: METORO_API_SERVER_URL
              value: {{ .Values.exporter.envVars.mandatory.apiServerUrl }}
            - name: METORO_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- if not .Values.exporter.secret.externalSecret.enabled }}
                  name: {{ .Values.exporter.secret.name }}
                  key: AUTH_TOKEN
                  {{- else }}
                  name: {{ .Values.exporter.secret.externalSecret.name }}
                  key: {{ .Values.exporter.secret.externalSecret.secretKey }}
                  {{- end }}
            - name: REDIS_URL
              value: {{printf "%s-master:%d,%s-replicas:%d" .Values.redis.fullnameOverride (.Values.redis.master.service.ports.redis | int) .Values.redis.fullnameOverride (.Values.redis.master.service.ports.redis | int)}}
            {{- if .Values.redis.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.auth.existingSecret }}
                  key: password
            {{- end }}
            - name: GIN_MODE
              value: release
            - name: SHOULD_DROP_METORO_DATA
              value: {{ .Values.exporter.envVars.mandatory.shouldDropMetoroData | quote }}
            {{- with .Values.exporter.envVars.userDefined }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.exporter.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.exporter.configMap.name }}
              mountPath: /etc/exporter
              readOnly: true
      {{- with .Values.exporter.scheduling.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.exporter.scheduling.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.exporter.scheduling.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ .Values.exporter.configMap.name }}
          configMap:
            name: {{ .Values.exporter.configMap.name }}
            defaultMode: 420
